#+Title: Vlabs Analytics API for Open edX
#+Date: Tuesday, September 20, 2016 
#+Author: VLEAD Systems team
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction 
  This document reveals the technologies used, architecture diagram,
  installation and configuration of analytics API server.

* Architecture diagram
  Refer the diagram given below - 
  [[https://github.com/openedx-vlead/port-labs-to-openedx/blob/develop/src/analytics-setup/presentations/sprint2/images/VLABS%20Open%20edx%20Architecture%20Diagram.jpg][VLABS architecture diagram]]

  OpenedX server ---- POST ---->> Analytics API ---- POST ---->> Elasticsearch
  
* Design
  + As per the design, students will visit VLABS OpenedX and will
    access a Lab. When a student clicks an experiment section to
    perform an experiment, data related to the experiment (Experiment
    name, Experiment ID, Lab name, Lab ID, User ID) is POSTed to
    Analytics API server.
  + Analytics API server further evaluates the IP address of the
    client and obtains (GET) the location of the IP address using
    http://freegeoip.net/json/<your-ip-address>.
  + Analytics API server then POST the data to Elasticsearch in JSON
    format.
  + Kibana using its visualization then represents the graphs
    obtained.
  + Information on implementation of ELK node can be [[https://github.com/openedx-vlead/elk-stack-for-analytics][read here]]

* Definitions 
  + Usages ::
    + A student performing an experiments of a lab is considered to be
      a single usage.  This is captured by capturing a click on the
      Experiment section of Open edX.
    + If there are 3 experiments in a lab, A lab will have 3 usages
      and experiment will have 1 usage.

* Technologies used
  + Python Flask 
  + Apache web server 
 
* Steps to install and configure Analytics Server 
** Installing server components 
*** Install required packages, libraries 
   #+BEGIN_SRC command
   sudo apt-get update
   sudo apt-get -y install build-essential
   sudo apt-get -y install binutils 
   sudo apt-get -y install binutils-doc 
   sudo apt-get -y install python-dev python3-dev
   sudo apt-get -y install python-pip
   sudo apt-get -y intall git emacs 
   #+END_SRC

*** Install Python flask and flask CORS
   #+BEGIN_SRC command
   pip install Flask
   pip install -U flask-cors
   #+END_SRC

*** Install Elasticsearch-python client
   #+BEGIN_SRC command
   sudo apt-get update
   pip install elasticsearch
   #+END_SRC



* JSON formed to be written in elasticsearch 
  #+BEGIN_SRC command
  {
    "DATE_OF_EXPERIMENT": "30-8-2016",
    "LAB_NAME": "PopulationEcologyII",
    "EXPERIMENT_NAME": "OptimalforagingSitAndWaitPredators",
    "TIME_OF_EXPERIMENT": "19:49",
    "COURSE_ID": "blockv1UniversityYPS01Anytime",
    "IP_ADDRESS": "196.12.53.130"
    "Location" : "Telengana"
  }
  #+END_SRC
* Sample analytics obtained in elasticsearch database 
  #+BEGIN_SRC command
  {
  "_index": "vlabs",
  "_type": "usage",
  "_id": "AVbb0iWtWJEj-iw4NHBA",
  "_score": 1,
  "_source": {
    "STUDENT_LONG_ID": "85e628b9a69e69bf2ed9360f397dde90",
    "DATE_OF_EXPERIMENT": "30-8-2016",
    "LAB_NAME": "PopulationEcologyII",
    "EXPERIMENT_NAME": "OptimalforagingSitAndWaitPredators",
    "TIME_OF_EXPERIMENT": "19:49",
    "COURSE_ID": "blockv1UniversityYPS01Anytime",
    "IP_ADDRESS": "196.12.53.130",
    "Location" : Telengana"
   }
 }
  #+END_SRC 




* References
  + [[https://hostpresto.com/community/tutorials/how-to-install-and-configure-redis-on-ubuntu-14-04/][Install Redis]]
  + [[https://flask-cors.readthedocs.io/en/latest/][Install Flask CORS]]
  + [[http://flask.pocoo.org/docs/0.11/installation/][Install Flask]]

   
