#+TITLE: Design of Feedback Portal/Service
#+AUTHOR: VLEAD
#+DATE: [2016-09-09 Fri]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil


* Introduction 
  The =design= of the =Feedback Portal/Service= is captured here.


* Application Programming Interface
  :PROPERTIES:
  :CUSTOM_ID: api
  :END: 
** Display generic feedback form. 
  :PROPERTIES:
  :CUSTOM_ID: display_feedback_form
  :END:    
  - URL :: /

  - Method :: GET

  - URL Params
    None

  - Success Response
    + Code: 200

    + Content:
      {
       questions: [{name: 'question', 
                    type: 'radio | checkbox | textbox',
                    options: 'list of options' | 'size of text'}, ....]
      }

  - Error Response:
    
  - Example:
    [[http://localhost:5000/][example url]]


** Display the feedback form. 
  :PROPERTIES:
  :CUSTOM_ID: display_feedback_form
  :END:    
  - URL :: /feedback?lab_name=:lab_name&exp_name=:exp_name&user_id=:user_id&key=:key
       OR
       /feedback?lab_name=:lab_name&exp_name=:exp_name&key=:key
       OR
       /feedback?lab_name=:lab_name&key=:key

  - Method :: GET

  - URL Params
    Required: lab_name=[string], key=[string]
    Optional: exp_name=[string], user_id=[string]

  - Success Response
    + Code: 200

    + Content:
      {
       lab_name: 'lab_name',
       exp_name: 'exp_name',
       user_id: 'user_id',
       questions: [{name: 'question', 
                    type: 'radio | checkbox | textbox',
                    options: 'list of options' | 'size of text'}, ....]
      }

  - Error Response:
    + Code: 401 UNAUTHORIZED

    + Content: { error : "Wrong Key configured" }

    OR

    + Code: 400 Bad Request

    + Content: { error : "lab name is mandatory and experiment is optional" }

  - Example:
    [[http://localhost:5000/feedback?lab_name=datastructures&exp_name=binarysearch&user_id=temp124&key=defaultkey][example url]]


** Save generic feedback form. 
  :PROPERTIES:
  :CUSTOM_ID: save_feedback_form
  :END:    
   The authentication for the =POST= is sent as part of header.
   - URL :: /

   - Method :: POST

   - Data Params
     {
        version: <version>,
        questions: [{name: 'question', 
                     answers: [ans1, ...]
       }

   - Success Response
     + Code: 200

     + Content:
       {
         status: "success"
       }

   - Error Response:
     + Code: 400 Bad Request

     + Content: { error : "some of the parameters are not part of the
       request" }


** Save the feedback form. 
  :PROPERTIES:
  :CUSTOM_ID: save_feedback_form
  :END:    
   The authentication for the =POST= is sent as part of header.
   - URL :: /feedback

   - Method :: POST

   - Data Params
     {
        lab_name: 'lab_name',
        exp_name: 'exp_name',
        user_id: 'user_id',
        questions: [{name: 'question', 
                     answers: [ans1, ...]
       }

   - Success Response
     + Code: 200

     + Content:
       {
         status: "success"
       }

   - Error Response:
     + Code: 401 UNAUTHORIZED

     + Content: { error : "Wrong Key configured" }

     OR

     + Code: 400 Bad Request

     + Content: { error : "some of the parameters are not part of the
       request" }


** Get Workshop Usage
  :PROPERTIES:
  :CUSTOM_ID: get_workshop_usage
  :END:       
    - URL :: /usage_from_feedback?ip=:ip&date=:date&key=:key

    - Method :: GET

    - URL Params
      Required: ip=[string]
                date=[string], the format of the date string is in
      'mm-dd-yyyy' format. 
                key=[string]

    - Success Response
      + Code: 200

      + Content:
        {
         usage: 'usage_number'
        }

    - Error Response:
      + Code: 401 UNAUTHORIZED

      + Content: { error : "Wrong Key configured" }

      OR

      + Code: 400 Bad Request

      + Content: { error : "IP and Date are mandatory and date should be in
        'mm-dd-yyyy' format" }


** Get all feedback forms for a date
  :PROPERTIES:
  :CUSTOM_ID: get_feedback_on_a_day
  :END:          
    - URL :: /feedback_dump?date=:date&key=:key

    - Method :: GET

    - URL Params
      Required: date=[string], the format of the string is in 'mm-dd-yyyy'
      format
                key=[string]

    - Success Response
      + Code: 200

      + Content:
        {
         feedbacks: [{lab_name: 'lab_name',
                      exp_name: 'exp_name',
                      date: 'mm-dd-yyyy',
                      IP: 'ip',
                      responses: [{question: 'name',
                                   answers: ['val1',..]
                                  }, ...]
                     }, ...]
        }

    - Error Response:
      + Code: 401 UNAUTHORIZED

      + Content: { error : "Wrong Key configured" }

      OR

      + Code: 400 Bad Request

      + Content: { error : "Date is mandatory and should be in 'mm-dd-yyyy' format" }

	
* Services Interplay
  :PROPERTIES:
  :CUSTOM_ID: services_interplay
  :END:          
    The following diagram summarizes the interplay of different services that
    enable collection of feedback and integration with =virtual labs= and
    =outreach portal=.

#+BEGIN_HTML
<img src="https://docs.google.com/drawings/d/1h7Tqof8X9u_V3qKAs8Yu6Jk9VzxjIzDz78FynwGYCVk/pub?w=960&amp;h=720">
<p align="center"> Services Interplay </p>
#+END_HTML

  To edit the feedback relations image click [[https://docs.google.com/drawings/d/1h7Tqof8X9u_V3qKAs8Yu6Jk9VzxjIzDz78FynwGYCVk/edit?usp=sharing][here]]


* Capturing workshop usage through feedback forms
  :PROPERTIES:
  :CUSTOM_ID: workshop_usage
  :END:          
  Realizes the [[../requirements/index.org::#workshop_usage][workshop usage]] requirement
  Feebback forms are submitted by the students attending a workshop after
  completion of each experiment.  Outreach facilitates conducting of workshops.
  The scenario below shows the way to capture the usage from the feedback forms
  submitted for a workshop.

#+BEGIN_HTML
<img src="https://docs.google.com/drawings/d/1bWGDP8jT7JUW49D0Wp7bI9uzqfZ8XGPWkCti7jqg17M/pub?w=960&amp;h=720">
<p align="center"> Workshop Usage </p>
#+END_HTML


  To edit the feedback relations image click [[https://docs.google.com/drawings/d/1bWGDP8jT7JUW49D0Wp7bI9uzqfZ8XGPWkCti7jqg17M/edit?usp=sharing][here]]


* Dynamic generation of =feedback form=
  :PROPERTIES:
  :CUSTOM_ID: form_generation
  :END:          
  Feebback form is buult on the browser from the data that is sent as part of
  the [[./index.org::#display_feedback_form][=GET=]] response.  The response contains all the relevant data to build the
  form.  It will hold the questions, the =type= of the question like if the
  question is a radio button or a check box etc. and the values of all the
  oprions a question can have.

#+BEGIN_HTML
<img src="https://docs.google.com/drawings/d/10nfQZtJ7NJaDYKZru5DiXlS-YZaXQ1nlLoYb5-oRaCY/pub?w=960&amp;h=720">
<p align="center"> Workshop Usage </p>
#+END_HTML


    To edit the feedback relations image click [[https://docs.google.com/drawings/d/10nfQZtJ7NJaDYKZru5DiXlS-YZaXQ1nlLoYb5-oRaCY/edit?usp=sharing][here]]
    

* Dumping the data from the feedback service to elastic search
  :PROPERTIES:
  :CUSTOM_ID: dump_to_elastic_search
  :END:          
  The feedback forms submitted for a day are dumped into the machine running
  elastic search database to analyze the data.  [[./index.org::#get_feedback_on_a_day][API]] provides the interface to
  fetch all the feedback forms submitted on a given date.  A job that runs
  every night 5 minutes past the midnight [[./index.org::#get_feedback_on_a_day][fetches]] the list of feedback forms
  submitted the previous day and posts each feedback to the elastic search
  engine.
    
